warning: an associated function with this name may be added to the standard library in the future
   --> $DIR/validated_pool.rs:206:44
    |
206 |                     self.import_notification_sinks.lock().retain_mut(|sink| {
    |                                                           ^^^^^^^^^^
    |
    = note: `#[warn(unstable_name_collisions)]` on by default
    = warning: once this associated item is added to the standard library, the ambiguity may cause an error or change in behavior!
    = note: for more information, see issue #48919 <https://github.com/rust-lang/rust/issues/48919>
    = help: call with fully qualified syntax `retain_mut(...)` to keep using the current method

warning: unused return value of `Box::<T>::pin` that must be used
   --> $DIR/lib.rs:501:4
    |
501 |             Box::pin(futures::future::ready(TransactionImport::None));
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default

warning: unused attribute `allow`
  --> $DIR/trait_tests.rs:70:2
   |
70 |     #[allow(deprecated)]
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_attributes)]` on by default
note: the built-in attribute `allow` will be ignored, since it's applied to the macro invocation `assert_eq`
  --> $DIR/trait_tests.rs:71:2
   |
71 |     assert_eq!(blockchain.leaves().unwrap(), vec![a2.hash()]);
   |     ^^^^^^^^^

error: Only `&self` is supported!
  --> $DIR/mock_only_self_reference.rs:14:11
   |
14 |         fn test(self, data: u64) {}
   |                 ^^^^

error: Only `&self` is supported!
  --> $DIR/mock_only_self_reference.rs:16:12
   |
16 |         fn test2(&mut self, data: u64) {}
   |                  ^

error[E0053]: method `Api_test_runtime_api_impl` has an incompatible type for trait
  --> $DIR/mock_only_self_reference.rs:12:1
   |
3  | / sp_api::decl_runtime_apis! {
4  | |     pub trait Api {
5  | |         fn test(data: u64);
6  | |         fn test2(data: u64);
7  | |     }
8  | | }
   | |_- type in trait
...
12 |   sp_api::mock_impl_runtime_apis! {
   |   -^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |   |
   |  _expected `u64`, found `()`
   | |
13 | |     impl Api<Block> for MockApi {
14 | |         fn test(self, data: u64) {}
15 | |
16 | |         fn test2(&mut self, data: u64) {}
17 | |     }
18 | | }
   | |_- help: change the parameter type to match the trait: `Option<u64>`
   |
   = note: expected fn pointer `fn(&MockApi, &BlockId<sp_runtime::generic::block::Block<sp_runtime::generic::header::Header<u64, sp_runtime::traits::BlakeTwo256>, Extrinsic>>, ExecutionContext, Option<u64>, Vec<_>) -> Result<_, _>`
              found fn pointer `fn(&MockApi, &BlockId<sp_runtime::generic::block::Block<sp_runtime::generic::header::Header<u64, sp_runtime::traits::BlakeTwo256>, Extrinsic>>, ExecutionContext, Option<()>, Vec<_>) -> Result<_, _>`
   = note: this error originates in the macro `sp_api::mock_impl_runtime_apis` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0053]: method `Api_test2_runtime_api_impl` has an incompatible type for trait
  --> $DIR/mock_only_self_reference.rs:12:1
   |
3  | / sp_api::decl_runtime_apis! {
4  | |     pub trait Api {
5  | |         fn test(data: u64);
6  | |         fn test2(data: u64);
7  | |     }
8  | | }
   | |_- type in trait
...
12 |   sp_api::mock_impl_runtime_apis! {
   |   -^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |   |
   |  _expected `u64`, found `()`
   | |
13 | |     impl Api<Block> for MockApi {
14 | |         fn test(self, data: u64) {}
15 | |
16 | |         fn test2(&mut self, data: u64) {}
17 | |     }
18 | | }
   | |_- help: change the parameter type to match the trait: `Option<u64>`
   |
   = note: expected fn pointer `fn(&MockApi, &BlockId<sp_runtime::generic::block::Block<sp_runtime::generic::header::Header<u64, sp_runtime::traits::BlakeTwo256>, Extrinsic>>, ExecutionContext, Option<u64>, Vec<_>) -> Result<_, _>`
              found fn pointer `fn(&MockApi, &BlockId<sp_runtime::generic::block::Block<sp_runtime::generic::header::Header<u64, sp_runtime::traits::BlakeTwo256>, Extrinsic>>, ExecutionContext, Option<()>, Vec<_>) -> Result<_, _>`
   = note: this error originates in the macro `sp_api::mock_impl_runtime_apis` (in Nightly builds, run with -Z macro-backtrace for more info)
